diff --git a/kdecore/CMakeLists.txt b/kdecore/CMakeLists.txt
index 6715d07..deaa233 100644
--- a/kdecore/CMakeLists.txt
+++ b/kdecore/CMakeLists.txt
@@ -413,6 +413,12 @@ endif (NOT Q_WS_X11 AND NOT Q_WS_QWS)
 kde4_add_library(kdecore ${LIBRARY_TYPE} ${kdecore_LIB_SRCS})
 
 target_link_libraries(kdecore ${QT_QTCORE_LIBRARY} ${QT_QTNETWORK_LIBRARY} ${QT_QTDBUS_LIBRARY} ${QT_QTXML_LIBRARY} ${ZLIB_LIBRARY} ${kdecore_OPTIONAL_LIBS})
+if(APPLE)
+   # This is regrettable, but needed for kdecore/kernel/ktoolinvocation_xll.cpp
+   # to link into QDesktopServices::openUrl() and thus get access to the user's
+   # preferrred browser wherever it is required in KDE 4 apps or libraries.
+   target_link_libraries(kdecore ${QT_QTGUI_LIBRARY})
+endif()
 
 if(WINCE)
   target_link_libraries(kdecore ${WCECOMPAT_LIBRARIES} Ceshell.lib)
diff --git a/kdecore/kernel/ktoolinvocation_x11.cpp b/kdecore/kernel/ktoolinvocation_x11.cpp
index 5168f2f..884f753 100644
--- a/kdecore/kernel/ktoolinvocation_x11.cpp
+++ b/kdecore/kernel/ktoolinvocation_x11.cpp
@@ -49,6 +49,12 @@
 #include <QtCore/QFile>
 #include <QtDBus/QtDBus>
 
+#ifdef Q_OS_MAC
+#include <QDesktopServices>
+// TODO - If there are more cases than invokeBrowser() requiring Apple OS X
+//        treatment, consider adding a ktoolinvocation_mac.cpp module.
+#endif
+
 static QStringList splitEmailAddressList( const QString & aStr )
 {
     // This is a copy of KPIM::splitEmailAddrList().
@@ -303,6 +309,16 @@ void KToolInvocation::invokeBrowser( const QString &url, const QByteArray& start
     // otherwise xdg-open, otherwise kde-open (which does a mimetype check first though).
 
     // Outside KDE, call xdg-open if present, otherwise fallback to the above logic.
+#ifdef Q_OS_MAC
+    // On Apple OS X, KDE's regular invokeBrowser() does not work easily and
+    // especially not in the critical Help->Report Bug dialog.  The openUrl()
+    // method in class QDesktopServices method automatically gets you the user's
+    // preferred browser, as configured in Apple OS X preferences.  There is a
+    // port of xdg-utils on MacPorts, but it adds extra dependencies, including
+    // the X11 emulator, so xdg-open has not been tried here.
+    QDesktopServices::openUrl (QUrl(url));
+    return;
+#endif
 
     QString exe; // the binary we are going to launch.
 
